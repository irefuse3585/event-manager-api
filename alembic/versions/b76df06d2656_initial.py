"""initial

Revision ID: b76df06d2656
Revises:
Create Date: 2025-05-22 02:56:39.099907

"""

from typing import Sequence, Union

import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

from alembic import op

# revision identifiers, used by Alembic.
revision: str = "b76df06d2656"
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column(
        "permissions",
        "role",
        existing_type=postgresql.ENUM(
            "OWNER", "EDITOR", "VIEWER", name="permissionrole"
        ),
        type_=sa.Enum(
            "OWNER", "EDITOR", "VIEWER", name="permission_role", native_enum=False
        ),
        existing_nullable=False,
    )
    op.alter_column(
        "users",
        "role",
        existing_type=postgresql.ENUM("ADMIN", "USER", name="userrole"),
        type_=sa.Enum("ADMIN", "USER", name="user_role", native_enum=False),
        existing_nullable=False,
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column(
        "users",
        "role",
        existing_type=sa.Enum("ADMIN", "USER", name="user_role", native_enum=False),
        type_=postgresql.ENUM("ADMIN", "USER", name="userrole"),
        existing_nullable=False,
    )
    op.alter_column(
        "permissions",
        "role",
        existing_type=sa.Enum(
            "OWNER", "EDITOR", "VIEWER", name="permission_role", native_enum=False
        ),
        type_=postgresql.ENUM("OWNER", "EDITOR", "VIEWER", name="permissionrole"),
        existing_nullable=False,
    )
    # ### end Alembic commands ###
